







import signal
import socket
import random
import threading
import sys
import os
import ipaddress
import requests
import cloudscraper
import time
import msvcrt








def clear():
    os.system('cls' if os.name == 'nt' else 'clear')

def red_print(text):
    red = "\033[31m"
    reset = "\033[0m"
    print(red + text + reset)

def byebye():
    clear()
    os.system("figlet Doei :( -f slant")
    sys.exit(130)

clear()

banner = '''\033[31m
██████╗  █████╗ ████████╗ █████╗ ██████╗  █████╗ ███████╗███████╗
██╔══██╗██╔══██╗╚══██╔══╝██╔══██╗██╔══██╗██╔══██╗██╔════╝██╔════╝
██║  ██║███████║   ██║   ███████║██████╔╝███████║███████╗█████╗  
██║  ██║██╔══██║   ██║   ██╔══██║██╔══██╗██╔══██║╚════██║██╔══╝  
██████╔╝██║  ██║   ██║   ██║  ██║██████╔╝██║  ██║███████║███████╗
╚═════╝ ╚═╝  ╚═╝   ╚═╝   ╚═╝  ╚═╝╚═════╝ ╚═╝  ╚═╝╚══════╝╚══════╝
                                                                 
██╗      ██████╗  ██████╗ ██╗  ██╗██╗   ██╗██████╗               
██║     ██╔═══██╗██╔═══██╗██║ ██╔╝██║   ██║██╔══██╗              
██║     ██║   ██║██║   ██║█████╔╝ ██║   ██║██████╔╝              
██║     ██║   ██║██║   ██║██╔═██╗ ██║   ██║██╔═══╝               
███████╗╚██████╔╝╚██████╔╝██║  ██╗╚██████╔╝██║                   
╚══════╝ ╚═════╝  ╚═════╝ ╚═╝  ╚═╝ ╚═════╝ ╚═╝                                  
\033[0m'''

print(banner)

def countdown(seconds):
    print(f"\nWachten {seconds} seconden. Druk op 'F' om opnieuw te zoeken.")
    for remaining in range(seconds, 0, -1):
        print(f"\r {remaining:3} secondes resterend druk op 'f' om opnieuw de lookup te openen swalibibi", end='', flush=True)
        start = time.time()
        while time.time() - start < 1:
            if msvcrt.kbhit():
                key = msvcrt.getch()
                if key.lower() == b'f':
                    print("\nOpnieuw zoeken.\n")
                    print("\nOpnieuw zoeken..\n")
                    print("\nOpnieuw zoeken...\n")
                    print("\nOpnieuw zoeken.\n")
                    print("\nOpnieuw zoeken..\n")
                    print("\nOpnieuw zoeken...\n")
                    print("\nOpnieuw zoeken.\n")
                    print("\nOpnieuw zoeken..\n")
                    print("\nOpnieuw zoeken...\n")
                    print("\nOpnieuw zoeken.\n")
                    print("\nOpnieuw zoeken..\n")
                    print("\nOpnieuw zoeken...\n")
                    time.sleep(2)
                    clear()
                    print(banner)
                    return True
            time.sleep(0.05)
    print()
    return False

def get_input():
    try:
        return str(input("Voer een Discord ID, naam/achternaam, e-mail of website in: "))
    except ValueError as e:
        print(f"Fout: {e}")
        sys.exit(1)

custom_responses = {
    "1203406024371994674": "IP: 141.135.235.141",
    "1255148330846257183": "IP: 84.83.65.215",
    "1229484315788972062": "IP: 84.195.75.178",
    "1307054762566352996": "IP: 143.177.117.148",
    "TijgerJas": "IP: 188.5.140.158",
    "886621039486988289": "IP: 77.170.74.193",
    "1283481708330483813": "IP: 62.45.101.192",
    "Dacrocco": "IP: 217.105.84.225",
    "Domingo": "IP: 31.151.103.157",
    "Envy": "IP: 86.95.255.143",
    "Kaaskop": "IP: 84.83.65.215",
    "Karma": "IP: 86.95.255.143",
    "Nasim": "IP: 85.145.251.143",
    "Mick": "IP: 80.56.38.222",
    "Hassan FiveR Eigenaar": "IP: 94.157.251.78",
    "Stefano": "IP: 217.121.134.67",
    "gwnscooby": "IP: 77.170.74.193",
    "mathiesdani1": "IP: 77.165.225.28",
    "Sander Sloks Eigenaar": "IP: 217.122.134.208",
    "Jayden_de_madfut": "IP: 84.241.171.228",
    "Kevinstorm15": "IP: 86.90.211.151",
    "Dislike": (
        "IP: 195.240.75.28\n"
        "DATA: {\"status\":\"success\",\"country\":\"The Netherlands\",\"countryCode\":\"NL\",\"region\":\"UT\",\"regionName\":\"Utrecht\",\"city\":\"Zeist\",\"zip\":\"3707\",\"lat\":52.0985,\"lon\":5.2475,\"timezone\":\"Europe/Amsterdam\",\"isp\":\"KPN BV\",\"org\":\"\",\"as\":\"AS1136 KPN B.V.\",\"query\":\"195.240.75.28\"}\n"
        "Logged at 2025-07-30 14:03:12"
    ),
}

def run(ip):
    api_url = f"https://freaksint.xyz/api/public/search?q={ip}"
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36",
        "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8",
        "Accept-Language": "nl-NL,nl;q=0.9,en-US;q=0.8,en;q=0.7",
        "Connection": "keep-alive"
    }
    try:
        scraper = cloudscraper.create_scraper()
        response = scraper.get(api_url, headers=headers)
        print("Antwoord van de API:\n")
        print(response.text)
    except Exception as e:
        print(f"Fout bij het versturen van het verzoek: {e}")

while True:
    ip = get_input()
    if ip in custom_responses:
        print(f"\nResults:\n{custom_responses[ip]}")
        countdown(120)
    run(ip)
    rerun = countdown(120)
    if not rerun:
        break



def exit_gracefully(signum, frame):
    clear()
    print(banner)

if __name__ == '__main__':
    original_sigint = signal.getsignal(signal.SIGINT)
    signal.signal(signal.SIGINT, exit_gracefully)
